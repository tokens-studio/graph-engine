name: Gimlet

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./packages/ui/Dockerfile
            type: frontend
          - dockerfile: ./packages/backend/Dockerfile
            type: backend
          - dockerfile: ./packages/documentation/Dockerfile
            type: docs
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3 

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN  }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=sha,format=long,prefix=${{matrix.type}}-
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
        images: |
          ghcr.io/tokens-studio/graph-engine

    - name: Publish Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.dockerfile }} 
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  deploy:
    runs-on: ubuntu-latest
    needs:
      - "build"
    steps: 
      - uses: actions/checkout@v4
      - name: üçç Deploy with Gimlet
        uses: gimlet-io/gimlet-artifact-shipper-action@v0.8.3
        env:
              GIMLET_SERVER: ${{ secrets.GIMLET_SERVER }}
              GIMLET_TOKEN: ${{ secrets.GIMLET_TOKEN }}
