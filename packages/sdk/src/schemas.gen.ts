// This file is auto-generated by @hey-api/openapi-ts

export const $CreatedGraph = {
    description: 'The created graph',
    properties: {
        id: {
            type: 'string'
        }
    },
    required: ['id'],
    type: 'object',
    additionalProperties: false
} as const;

export const $GraphCreationParams = {
    properties: {
        graph: {
            type: 'string',
            description: 'The json serialized graph'
        },
        name: {
            type: 'string',
            description: 'A human readable name for the graph'
        }
    },
    required: ['graph', 'name'],
    type: 'object'
} as const;

export const $Graph = {
    properties: {
        updatedAt: {
            type: 'string'
        },
        createdAt: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        graph: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        id: {
            type: 'string'
        }
    },
    required: ['updatedAt', 'createdAt', 'owner', 'graph', 'name', 'id'],
    type: 'object'
} as const;

export const $ListGraphParams = {
    properties: {
        perPage: {
            type: 'integer',
            format: 'int32',
            default: 10,
            minimum: 1,
            maximum: 20
        },
        page: {
            type: 'integer',
            format: 'int32',
            default: 0,
            minimum: 0
        }
    },
    type: 'object',
    additionalProperties: false
} as const;

export const $SchemaObject = {
    properties: {
        id: {
            type: 'string'
        },
        '$id': {
            type: 'string'
        },
        '$schema': {
            type: 'string'
        },
        '$async': {
            type: 'boolean',
            enum: [false],
            nullable: false
        }
    },
    type: 'object',
    additionalProperties: {}
} as const;

export const $GraphSchema = {
    '$ref': '#/components/schemas/SchemaObject'
} as const;

export const $InvokeableInputDefinition = {
    properties: {
        type: {
            '$ref': '#/components/schemas/SchemaObject'
        },
        value: {}
    },
    required: ['value'],
    type: 'object',
    additionalProperties: false
} as const;

export const $Record_string_InvokeableInputDefinition_ = {
    properties: {},
    additionalProperties: {
        '$ref': '#/components/schemas/InvokeableInputDefinition'
    },
    type: 'object',
    description: 'Construct a type with a set of properties K of type T'
} as const;

export const $InvokeParams = {
    properties: {
        graphId: {
            type: 'string'
        },
        payload: {
            '$ref': '#/components/schemas/Record_string.InvokeableInputDefinition_'
        }
    },
    required: ['graphId', 'payload'],
    type: 'object',
    additionalProperties: false
} as const;

export const $PaginatedParams = {
    properties: {
        perPage: {
            type: 'integer',
            format: 'int32',
            default: 10,
            minimum: 1,
            maximum: 20
        },
        page: {
            type: 'integer',
            format: 'int32',
            default: 0,
            minimum: 0
        }
    },
    type: 'object',
    additionalProperties: false
} as const;

export const $CredentialCreationParams = {
    properties: {},
    type: 'object',
    additionalProperties: false
} as const;

export const $PaginatedListCredsParams = {
    properties: {
        perPage: {
            type: 'integer',
            format: 'int32',
            default: 10,
            minimum: 1,
            maximum: 20
        },
        page: {
            type: 'integer',
            format: 'int32',
            default: 0,
            minimum: 0
        }
    },
    type: 'object',
    additionalProperties: false
} as const;