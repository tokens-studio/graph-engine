// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { $OpenApiTs } from './types.gen';

export class GraphService {
    /**
     * Creates a new graph for the user
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreatedGraph
     * @throws ApiError
     */
    public static createGraph(data: $OpenApiTs['/graph']['post']['req']): CancelablePromise<$OpenApiTs['/graph']['post']['res'][201]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/graph',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.perPage
     * @param data.page
     * @returns Graph
     * @throws ApiError
     */
    public static listGraphs(data: $OpenApiTs['/graph']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/graph']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph',
            query: {
                perPage: data.perPage,
                page: data.page
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.graphId
     * @returns Graph
     * @throws ApiError
     */
    public static getGraph(data: $OpenApiTs['/graph/{graphId}']['get']['req']): CancelablePromise<$OpenApiTs['/graph/{graphId}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/{graphId}',
            path: {
                graphId: data.graphId
            },
            errors: {
                404: 'Graph not found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.graphId
     * @returns unknown
     * @throws ApiError
     */
    public static deleteGraph(data: $OpenApiTs['/graph/{graphId}']['delete']['req']): CancelablePromise<$OpenApiTs['/graph/{graphId}']['delete']['res'][200]> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/graph/{graphId}',
            path: {
                graphId: data.graphId
            },
            errors: {
                404: 'Graph not found'
            }
        });
    }
    
}

export class ExecutionService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns void No content
     * @throws ApiError
     */
    public static invoke(data: $OpenApiTs['/executions']['post']['req']): CancelablePromise<$OpenApiTs['/executions']['post']['res'][204]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/executions',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.perPage
     * @param data.page
     * @returns unknown
     * @throws ApiError
     */
    public static getResources(data: $OpenApiTs['/executions']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/executions']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/executions',
            query: {
                perPage: data.perPage,
                page: data.page
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static getResource(data: $OpenApiTs['/executions/{id}']['get']['req']): CancelablePromise<$OpenApiTs['/executions/{id}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/executions/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.artifactId
     * @returns void No content
     * @throws ApiError
     */
    public static getArtifact(data: $OpenApiTs['/executions/{id}/artifacts/{artifactId}']['get']['req']): CancelablePromise<$OpenApiTs['/executions/{id}/artifacts/{artifactId}']['get']['res'][204]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/executions/{id}/artifacts/{artifactId}',
            path: {
                id: data.id,
                artifactId: data.artifactId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.artifactId
     * @returns void No content
     * @throws ApiError
     */
    public static getLog(data: $OpenApiTs['/executions/{id}/logs/{artifactId}']['get']['req']): CancelablePromise<$OpenApiTs['/executions/{id}/logs/{artifactId}']['get']['res'][204]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/executions/{id}/logs/{artifactId}',
            path: {
                id: data.id,
                artifactId: data.artifactId
            }
        });
    }
    
}

export class CredentialsService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns void No content
     * @throws ApiError
     */
    public static createCreds(data: $OpenApiTs['/credentials']['post']['req']): CancelablePromise<$OpenApiTs['/credentials']['post']['res'][204]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/credentials',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.perPage
     * @param data.page
     * @returns unknown
     * @throws ApiError
     */
    public static listCreds(data: $OpenApiTs['/credentials']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/credentials']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/credentials',
            query: {
                perPage: data.perPage,
                page: data.page
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static getCreds(data: $OpenApiTs['/credentials/{id}']['get']['req']): CancelablePromise<$OpenApiTs['/credentials/{id}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/credentials/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static deleteCred(data: $OpenApiTs['/credentials/{id}']['delete']['req']): CancelablePromise<$OpenApiTs['/credentials/{id}']['delete']['res'][200]> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/credentials/{id}',
            path: {
                id: data.id
            },
            errors: {
                404: 'Credential not found'
            }
        });
    }
    
}